#debug: true

#logging:
#  level:
#    root: info
#    org.springframework: info
#    org.springframework.jdbc: debug
#    org.mybatis: debug
#    com.github.trang: debug

#学习笔记: 1.配置文件中，发现使用yml与properties两种后缀的文件
#         2.yml最大的好处在于其拥有天然的树状结构
#         3.在properties文件中是以”.”进行分割的， 在yml中是用”:”进行分割;
#         4..yml的数据格式和json的格式很像，都是K-V格式，并且通过”:”进行赋值；
#         5.在yml中缩进一定不能使用TAB，否则会报很奇怪的错误；（缩进特么只能用空格！！！！）
#         6.yml比properties对中文对支持更友好
#         7.冒号后面必须跟空格，这点很恶心

spring:
  profiles:
    # 默认环境为 default，多数据源演示请改为 dynamic
    active: default
  output:
    ansi:
      enabled: always
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3308/ccdb?useUnicode=true&characterEncoding=utf8&autoReconnect=true
    username: root
    password: jiao945
    druid:
      # spring.datasource.druid 前缀的配置将注入到 DruidParentDataSource，作为公共参数
      initial-size: 1
      min-idle: 1
      max-active: 10
      max-wait: 30000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 1800000
      max-evictable-idle-time-millis: 25200000
      validation-query: SELECT 1
      test-while-idle: true
      test-on-borrow: true
      test-on-return: false
      pool-prepared-statements: true
      max-open-prepared-statements: 20
      use-global-data-source-stat: true
      stat:
        db-type: mysql
        log-slow-sql: true
        slow-sql-millis: 1000
        merge-sql: true
      slf4j:
        enabled: true
        connection-log-enabled: false
        connection-log-error-enabled: true
        statement-log-enabled: false
        statement-log-error-enabled: true
        statement-sql-pretty-format: true
        statement-executable-sql-log-enable: true
        result-set-log-enabled: false
        result-set-log-error-enabled: true
      wall:
        enabled: true
        db-type: mysql
        log-violation: true
        throw-exception: false
        config:
          select-all-column-allow: false
      config:
        enabled: false
      aop-stat:
        enabled: true
        patterns:
          - acheng1314.cn.*
      web-stat:
        enabled: true
        exclusions: "/public/*,*.js,*.css,/druid*,*.jsp,*.swf"
        url-patterns: "/*"
      stat-view-servlet:
        enabled: true

  transaction:
    rollback-on-commit-failure: true
  aop:
    auto: true
    proxy-target-class: true

  http:
    encoding:
      force: true
      charset: UTF-8
      force-request: true
    converters:
      preferred-json-mapper: gson
    multipart:
      enabled: true
      max-file-size: "1024MB"
      max-request-size: "1024MB"

  freemarker:
    template-loader-path: "classpath:/templates/"
    cache: true
    charset: utf-8
    check-template-location: true
    content-type: text/html
    expose-request-attributes: true
    expose-session-attributes: true
    request-context-attribute: request
    suffix: ".ftl"
    enabled: true
  resources:
    static-locations: "classpath:/static/"

mybatis:
  type-aliases-package: acheng1314.cn.domain
  mapper-locations: classpath:/mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true
    use-generated-keys: true
    use-column-label: true

mybatis-plus:
  mapper-locations: classpath:/mapper/*.xml
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 0
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 0
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    refresh-mapper: true
    capital-mode: true
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false

server:
  port: 8181

#server:
#  servlet-path: "/"
#  context-path: "/"
#url要加什么前缀

#---
#
#debug: false
#
#spring:
#  profiles: default

#---
#
#debug: false
#
#spring:
#  profiles: dynamic
#  autoconfigure:
#    exclude:
#      # 多数据源场景会导致 `javax.sql.DataSource` 和 `org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer`
#      # 循环依赖，所以需要手动排除 `org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration`
#      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
#  datasource:
#    druid:
#      # 继承 spring.datasource.druid 前缀的配置，同时可以自定义配置，若名称相同则覆盖父配置
#      one:
#        name: one
#        max-active: 50
#        max-open-prepared-statements: 50
#      two:
#        name: two
#        max-active: 25
#        max-open-prepared-statements: 25
#
#---
#
#spring:
#  profiles: dev-yaml
#  datasource:
#    druid:
#      min-evictable-idle-time-millis: 100000
#      max-evictable-idle-time-millis: 200000
#
#---
#
#spring:
#  profiles: dynamic-dev-yaml
#  autoconfigure:
#    exclude:
#      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
#  datasource:
#    druid:
#      one:
#        name: one
#        min-evictable-idle-time-millis: 100001
#        max-evictable-idle-time-millis: 200001
#      two:
#        name: two
#        min-evictable-idle-time-millis: 100002
#        max-evictable-idle-time-millis: 200002